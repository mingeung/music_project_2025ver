plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.2'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.mysql:mysql-connector-j'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    implementation 'se.michaelthelin.spotify:spotify-web-api-java:9.1.1'
    implementation 'org.springframework.boot:spring-boot-starter-security'  //spring security
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client' //oauth2

    // ! WebSocket 설정 추가
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    // ! noSQL : mongoDB 사용
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
    // ! Spring Security와 Spring Messaging (WebSocket 포함) 보안 기능
    implementation 'org.springframework.security:spring-security-messaging'

}

allprojects {
    repositories {
        maven { url 'https://jitpack.io' }
    }
}


tasks.named('test') {
    useJUnitPlatform()
}
